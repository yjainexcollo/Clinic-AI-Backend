openapi: 3.0.3
info:
  title: Clinic-AI Backend API
  description: |
    A comprehensive medical consultation platform that provides AI-powered patient intake, 
    audio transcription and SOAP note generation.
    
    ## Features
    - **Patient Management**: Register patients and manage their medical records
    - **Intelligent Intake**: AI-powered adaptive questioning system for patient intake
    - **Audio Transcription**: Convert consultation audio to text using Whisper (for visit transcripts)
    - **SOAP Notes**: Generate structured medical notes from transcripts
    - **Multi-language Support**: English and Spanish language support
    
    ## Architecture
    This API follows Clean Architecture principles with:
    - **Domain Layer**: Core business entities and rules
    - **Application Layer**: Use cases and business logic
    - **Infrastructure Layer**: External services and data persistence
    - **Presentation Layer**: FastAPI endpoints and schemas
    
    ## External Services
    - **OpenAI**: Question generation, SOAP notes, post-visit summaries
    - **Whisper**: Audio transcription (local or OpenAI API)
    - **MongoDB**: Document storage with Beanie ODM
    
  version: 1.0.0
  contact:
    name: Clinic-AI Support
    email: support@clinic-ai.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8000
    description: Local development server
  - url: https://api.clinic-ai.com
    description: Production server

paths:

  /patients/:
    post:
      summary: Register New Patient
      description: Register a new patient and start the intake process
      operationId: register_patient
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPatientRequest'
      responses:
        '201':
          description: Patient registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterPatientResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Patient already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/consultations/answer:
    post:
      summary: Answer Intake Question
      description: Submit an answer to an intake question, optionally with medication images
      operationId: answer_intake_question
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerIntakeRequest'
          multipart/form-data:
            schema:
              type: object
              properties:
                patient_id:
                  type: string
                  description: Opaque patient ID
                visit_id:
                  type: string
                  description: Visit ID
                question_id:
                  type: string
                  description: Question ID being answered
                answer:
                  type: string
                  description: Patient's answer
                medication_images:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Optional medication images
      responses:
        '200':
          description: Answer processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerIntakeResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Patient or visit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Intake already completed or duplicate question
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      summary: Edit Intake Answer
      description: Edit a previously submitted intake answer
      operationId: edit_intake_answer
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAnswerRequest'
      responses:
        '200':
          description: Answer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditAnswerResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Patient, visit, or question not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/webhook/images:
    post:
      summary: Upload Medication Images
      description: Webhook endpoint for uploading medication images (supports both single and multiple images)
      operationId: upload_medication_images
      tags:
        - Patients
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                patient_id:
                  type: string
                  description: Opaque patient ID
                visit_id:
                  type: string
                  description: Visit ID
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Medication image files
      responses:
        '200':
          description: Images uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_ids:
                    type: array
                    items:
                      type: string
                    description: Generated image IDs
                  message:
                    type: string
                    example: "Images uploaded successfully"
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/{patient_id}/visits/{visit_id}/intake-images/{image_id}/content:
    get:
      summary: Get Intake Medication Image Content
      description: Stream medication image content uploaded during intake with proper access control
      operationId: get_intake_medication_image_content
      tags:
        - Patients
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Opaque patient ID
          schema:
            type: string
        - name: visit_id
          in: path
          required: true
          description: Visit ID
          schema:
            type: string
        - name: image_id
          in: path
          required: true
          description: Image ID
          schema:
            type: string
      responses:
        '200':
          description: Image content
          content:
            image/*:
              schema:
                type: string
                format: binary
        '403':
          description: Access denied to this image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Image not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/{patient_id}/visits/{visit_id}/images:
    get:
      summary: List Medication Images
      description: List metadata for uploaded medication images for a specific visit
      operationId: list_medication_images
      tags:
        - Patients
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Opaque patient ID
          schema:
            type: string
        - name: visit_id
          in: path
          required: true
          description: Visit ID
          schema:
            type: string
      responses:
        '200':
          description: List of medication images
          content:
            application/json:
              schema:
                type: object
                properties:
                  images:
                    type: array
                    items:
                      type: object
                      properties:
                        image_id:
                          type: string
                        filename:
                          type: string
                        upload_date:
                          type: string
                          format: date-time
                        file_size:
                          type: integer
        '404':
          description: Patient or visit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/images/{image_id}:
    delete:
      summary: Delete Medication Image
      description: Delete a medication image by ID
      operationId: delete_medication_image
      tags:
        - Patients
      parameters:
        - name: image_id
          in: path
          required: true
          description: Image ID
          schema:
            type: string
      responses:
        '200':
          description: Image deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Image deleted successfully"
        '404':
          description: Image not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/summary/previsit:
    post:
      summary: Generate Pre-Visit Summary
      description: Generate an AI-powered pre-visit summary from intake data
      operationId: generate_pre_visit_summary
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreVisitSummaryRequest'
      responses:
        '200':
          description: Pre-visit summary generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreVisitSummaryResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Patient or visit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/{patient_id}/visits/{visit_id}/summary:
    get:
      summary: Get Pre-Visit Summary
      description: Retrieve a stored pre-visit summary
      operationId: get_pre_visit_summary
      tags:
        - Patients
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Opaque patient ID
          schema:
            type: string
        - name: visit_id
          in: path
          required: true
          description: Visit ID
          schema:
            type: string
      responses:
        '200':
          description: Pre-visit summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreVisitSummaryResponse'
        '404':
          description: Patient, visit, or summary not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/summary/postvisit:
    post:
      summary: Generate Post-Visit Summary
      description: Generate a patient-friendly post-visit summary for sharing
      operationId: generate_post_visit_summary
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostVisitSummaryRequest'
      responses:
        '200':
          description: Post-visit summary generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostVisitSummaryResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Patient or visit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/{patient_id}/visits/{visit_id}/summary/postvisit:
    get:
      summary: Get Post-Visit Summary
      description: Retrieve a stored post-visit summary
      operationId: get_post_visit_summary
      tags:
        - Patients
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Opaque patient ID
          schema:
            type: string
        - name: visit_id
          in: path
          required: true
          description: Visit ID
          schema:
            type: string
      responses:
        '200':
          description: Post-visit summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostVisitSummaryResponse'
        '404':
          description: Patient, visit, or summary not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /workflow/walk-in/create-visit:
    post:
      summary: Create Walk-In Visit
      description: Create a walk-in visit for patients without intake
      operationId: create_walk_in_visit
      tags:
        - Workflow
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalkInVisitRequest'
      responses:
        '201':
          description: Walk-in visit created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWalkInVisitResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /workflow/visit/{visit_id}/available-steps:
    get:
      summary: Get Available Workflow Steps
      description: Get available workflow steps for a visit based on its workflow type and status
      operationId: get_available_workflow_steps
      tags:
        - Workflow
      parameters:
        - name: visit_id
          in: path
          required: true
          description: Visit ID
          schema:
            type: string
      responses:
        '200':
          description: Available workflow steps
          content:
            application/json:
              schema:
                type: object
                properties:
                  visit_id:
                    type: string
                    description: Visit ID
                  workflow_type:
                    type: string
                    description: Type of workflow
                  current_status:
                    type: string
                    description: Current visit status
                  available_steps:
                    type: array
                    items:
                      type: string
                    description: List of available workflow steps
        '404':
          description: Visit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /workflow/visits/walk-in:
    get:
      summary: List Walk-In Visits
      description: List walk-in visits with pagination
      operationId: list_walk_in_visits
      tags:
        - Workflow
      parameters:
        - name: limit
          in: query
          required: false
          description: Number of visits to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 100
        - name: offset
          in: query
          required: false
          description: Number of visits to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: List of walk-in visits
          content:
            application/json:
              schema:
                type: object
                properties:
                  visits:
                    type: array
                    items:
                      type: object
                      properties:
                        visit_id:
                          type: string
                          description: Visit ID
                        patient_id:
                          type: string
                          description: Patient ID
                        workflow_type:
                          type: string
                          description: Workflow type
                        status:
                          type: string
                          description: Visit status
                        created_at:
                          type: string
                          format: date-time
                          description: Creation timestamp
                        updated_at:
                          type: string
                          format: date-time
                          description: Last update timestamp
                  limit:
                    type: integer
                    description: Number of items per page
                  offset:
                    type: integer
                    description: Number of items skipped
                  count:
                    type: integer
                    description: Number of items returned
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notes/transcribe:
    post:
      summary: Transcribe Audio
      description: Queue audio transcription as a background task
      operationId: transcribe_audio
      tags:
        - Notes
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                patient_id:
                  type: string
                  description: Opaque patient ID
                visit_id:
                  type: string
                  description: Visit ID
                audio_file:
                  type: string
                  format: binary
                  description: Audio file to transcribe
                language:
                  type: string
                  enum: [en, sp]
                  default: en
                  description: Audio language
      responses:
        '202':
          description: Transcription queued successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Transcription queued successfully"
                  task_id:
                    type: string
                    description: Background task ID
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notes/soap/generate:
    post:
      summary: Generate SOAP Note
      description: Generate a SOAP note from a transcript using AI
      operationId: generate_soap_note
      tags:
        - Notes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                patient_id:
                  type: string
                  description: Opaque patient ID
                visit_id:
                  type: string
                  description: Visit ID
                transcript:
                  type: string
                  description: Consultation transcript
                language:
                  type: string
                  enum: [en, sp]
                  default: en
                  description: Language for SOAP note generation
      responses:
        '200':
          description: SOAP note generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  soap_note:
                    type: object
                    properties:
                      subjective:
                        type: string
                        description: Patient's subjective complaints
                      objective:
                        type: string
                        description: Objective findings
                      assessment:
                        type: string
                        description: Clinical assessment
                      plan:
                        type: string
                        description: Treatment plan
                  language:
                    type: string
                    description: Language of the SOAP note
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Patient or visit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notes/vitals:
    post:
      summary: Store Vitals
      description: Store objective vitals data for a visit
      operationId: store_vitals
      tags:
        - Notes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                patient_id:
                  type: string
                  description: Opaque patient ID
                visit_id:
                  type: string
                  description: Visit ID
                vitals:
                  type: object
                  properties:
                    blood_pressure_systolic:
                      type: integer
                      description: Systolic blood pressure
                    blood_pressure_diastolic:
                      type: integer
                      description: Diastolic blood pressure
                    heart_rate:
                      type: integer
                      description: Heart rate (BPM)
                    temperature:
                      type: number
                      format: float
                      description: Body temperature
                    weight:
                      type: number
                      format: float
                      description: Weight
                    height:
                      type: number
                      format: float
                      description: Height
                    oxygen_saturation:
                      type: integer
                      description: Oxygen saturation percentage
      responses:
        '200':
          description: Vitals stored successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Vitals stored successfully"
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Patient or visit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/{patient_id}/visits/{visit_id}/vitals:
    get:
      summary: Get Vitals
      description: Retrieve stored vitals data for a visit
      operationId: get_vitals
      tags:
        - Notes
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Opaque patient ID
          schema:
            type: string
        - name: visit_id
          in: path
          required: true
          description: Visit ID
          schema:
            type: string
      responses:
        '200':
          description: Vitals data
          content:
            application/json:
              schema:
                type: object
                properties:
                  vitals:
                    type: object
                    properties:
                      blood_pressure_systolic:
                        type: integer
                      blood_pressure_diastolic:
                        type: integer
                      heart_rate:
                        type: integer
                      temperature:
                        type: number
                        format: float
                      weight:
                        type: number
                        format: float
                      height:
                        type: number
                        format: float
                      oxygen_saturation:
                        type: integer
                  recorded_at:
                    type: string
                    format: date-time
        '404':
          description: Patient, visit, or vitals not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/{patient_id}/visits/{visit_id}/transcript:
    get:
      summary: Get Transcript
      description: Retrieve the stored transcript for a visit, including structured dialogue
      operationId: get_transcript
      tags:
        - Notes
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Opaque patient ID
          schema:
            type: string
        - name: visit_id
          in: path
          required: true
          description: Visit ID
          schema:
            type: string
      responses:
        '200':
          description: Transcript data
          content:
            application/json:
              schema:
                type: object
                properties:
                  transcript:
                    type: string
                    description: Raw transcript text
                  structured_dialogue:
                    type: array
                    items:
                      type: object
                      properties:
                        speaker:
                          type: string
                          enum: [Doctor, Patient]
                        text:
                          type: string
                  language:
                    type: string
                  word_count:
                    type: integer
                  duration:
                    type: number
                    format: float
        '404':
          description: Patient, visit, or transcript not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/{patient_id}/visits/{visit_id}/soap:
    get:
      summary: Get SOAP Note
      description: Retrieve the stored SOAP note for a visit
      operationId: get_soap_note
      tags:
        - Notes
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Opaque patient ID
          schema:
            type: string
        - name: visit_id
          in: path
          required: true
          description: Visit ID
          schema:
            type: string
      responses:
        '200':
          description: SOAP note
          content:
            application/json:
              schema:
                type: object
                properties:
                  soap_note:
                    type: object
                    properties:
                      subjective:
                        type: string
                      objective:
                        type: string
                      assessment:
                        type: string
                      plan:
                        type: string
                  language:
                    type: string
                  generated_at:
                    type: string
                    format: date-time
        '404':
          description: Patient, visit, or SOAP note not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/{patient_id}/visits/{visit_id}/dialogue/structure:
    post:
      summary: Structure Dialogue
      description: Clean PII and structure a transcript into alternating Doctor/Patient JSON using an LLM
      operationId: structure_dialogue
      tags:
        - Notes
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Opaque patient ID
          schema:
            type: string
        - name: visit_id
          in: path
          required: true
          description: Visit ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transcript:
                  type: string
                  description: Raw transcript text to structure
                language:
                  type: string
                  enum: [en, sp]
                  default: en
                  description: Language of the transcript
      responses:
        '200':
          description: Dialogue structured successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  structured_dialogue:
                    type: array
                    items:
                      type: object
                      properties:
                        speaker:
                          type: string
                          enum: [Doctor, Patient]
                        text:
                          type: string
                  language:
                    type: string
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Patient or visit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'





components:
  schemas:

    RegisterPatientRequest:
      type: object
      required:
        - name
        - age
        - gender
        - chief_complaint
      properties:
        name:
          type: string
          description: Patient's full name
          example: "John Doe"
        age:
          type: integer
          minimum: 0
          maximum: 150
          description: Patient's age
          example: 35
        gender:
          type: string
          enum: [male, female, other, prefer_not_to_say]
          description: Patient's gender
          example: "male"
        chief_complaint:
          type: string
          description: Primary reason for the visit
          example: "Chest pain and shortness of breath"
        language:
          type: string
          enum: [en, sp]
          default: en
          description: Preferred language for the consultation
          example: "en"

    RegisterPatientResponse:
      type: object
      properties:
        patient_id:
          type: string
          description: Opaque patient ID for external use
          example: "pat_abc123def456"
        visit_id:
          type: string
          description: Visit ID
          example: "vis_xyz789uvw012"
        first_question:
          type: object
          properties:
            question_id:
              type: string
              example: "q_001"
            question:
              type: string
              example: "Can you describe the chest pain you're experiencing?"
            category:
              type: string
              example: "symptoms"
            allows_images:
              type: boolean
              example: false
        language:
          type: string
          example: "en"
        message:
          type: string
          example: "Patient registered successfully. Please answer the first question to continue."

    AnswerIntakeRequest:
      type: object
      required:
        - patient_id
        - visit_id
        - question_id
        - answer
      properties:
        patient_id:
          type: string
          description: Opaque patient ID
          example: "pat_abc123def456"
        visit_id:
          type: string
          description: Visit ID
          example: "vis_xyz789uvw012"
        question_id:
          type: string
          description: Question ID being answered
          example: "q_001"
        answer:
          type: string
          description: Patient's answer
          example: "The pain is sharp and located in the center of my chest. It started about 2 hours ago."
        medication_images:
          type: array
          items:
            type: string
            format: binary
          description: Optional medication images (for medication-related questions)
        language:
          type: string
          enum: [en, sp]
          default: en
          description: Language of the answer
          example: "en"

    AnswerIntakeResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Answer recorded successfully"
        next_question:
          type: object
          properties:
            question_id:
              type: string
              example: "q_002"
            question:
              type: string
              example: "Have you taken any medications for this pain?"
            category:
              type: string
              example: "medications"
            allows_images:
              type: boolean
              example: true
        is_complete:
          type: boolean
          description: Whether the intake process is complete
          example: false
        progress:
          type: object
          properties:
            questions_answered:
              type: integer
              example: 1
            total_questions:
              type: integer
              example: 8
            completion_percentage:
              type: number
              format: float
              example: 12.5
        ocr_quality_info:
          $ref: '#/components/schemas/OCRQualityInfo'

    EditAnswerRequest:
      type: object
      required:
        - patient_id
        - visit_id
        - question_id
        - new_answer
      properties:
        patient_id:
          type: string
          description: Opaque patient ID
          example: "pat_abc123def456"
        visit_id:
          type: string
          description: Visit ID
          example: "vis_xyz789uvw012"
        question_id:
          type: string
          description: Question ID to edit
          example: "q_001"
        new_answer:
          type: string
          description: New answer text
          example: "The pain is more of a dull ache and has been present for about 3 hours."

    EditAnswerResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Answer updated successfully"
        updated_answer:
          type: object
          properties:
            question_id:
              type: string
              example: "q_001"
            answer:
              type: string
              example: "The pain is more of a dull ache and has been present for about 3 hours."
            updated_at:
              type: string
              format: date-time

    OCRQualityInfo:
      type: object
      properties:
        has_images:
          type: boolean
          description: Whether medication images were provided
          example: true
        image_count:
          type: integer
          description: Number of images processed
          example: 2
        processing_status:
          type: string
          enum: [success, failed, partial]
          description: Overall processing status
          example: "success"
        extracted_text:
          type: string
          description: Text extracted from images
          example: "Lisinopril 10mg daily, Metformin 500mg twice daily"
        confidence_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence score for OCR extraction
          example: 0.85

    PreVisitSummaryRequest:
      type: object
      required:
        - patient_id
        - visit_id
      properties:
        patient_id:
          type: string
          description: Opaque patient ID
          example: "pat_abc123def456"
        visit_id:
          type: string
          description: Visit ID
          example: "vis_xyz789uvw012"
        language:
          type: string
          enum: [en, sp]
          default: en
          description: Language for summary generation
          example: "en"

    PreVisitSummaryResponse:
      type: object
      properties:
        summary:
          type: string
          description: AI-generated pre-visit summary
          example: "35-year-old male presenting with chest pain and shortness of breath. Pain described as sharp, central chest pain that started 2 hours ago. No current medications. No known allergies. Vital signs pending."
        language:
          type: string
          example: "en"
        generated_at:
          type: string
          format: date-time
        word_count:
          type: integer
          example: 45

    PostVisitSummaryRequest:
      type: object
      required:
        - patient_id
        - visit_id
      properties:
        patient_id:
          type: string
          description: Opaque patient ID
          example: "pat_abc123def456"
        visit_id:
          type: string
          description: Visit ID
          example: "vis_xyz789uvw012"
        language:
          type: string
          enum: [en, sp]
          default: en
          description: Language for summary generation
          example: "en"

    PostVisitSummaryResponse:
      type: object
      properties:
        summary:
          type: object
          properties:
            diagnosis:
              type: string
              description: Primary diagnosis
              example: "Acute chest pain, likely musculoskeletal"
            treatment:
              type: string
              description: Treatment plan
              example: "Rest, NSAIDs as needed, follow up if symptoms worsen"
            follow_up:
              type: string
              description: Follow-up instructions
              example: "Return in 1 week or sooner if pain increases"
            medications:
              type: array
              items:
                type: string
              example: ["Ibuprofen 400mg every 6 hours as needed"]
        language:
          type: string
          example: "en"
        generated_at:
          type: string
          format: date-time

    CreateWalkInVisitRequest:
      type: object
      required:
        - name
        - mobile
      properties:
        name:
          type: string
          description: Patient name
          example: "John Doe"
        mobile:
          type: string
          description: Patient mobile number
          example: "+1234567890"
        age:
          type: integer
          description: Patient age
          example: 35
        gender:
          type: string
          description: Patient gender
          example: "male"

    CreateWalkInVisitResponse:
      type: object
      properties:
        patient_id:
          type: string
          description: Patient ID
          example: "pat_abc123def456"
        visit_id:
          type: string
          description: Visit ID
          example: "vis_xyz789uvw012"
        workflow_type:
          type: string
          description: Workflow type
          example: "walk_in"
        status:
          type: string
          description: Visit status
          example: "walk_in_patient"
        message:
          type: string
          description: Response message
          example: "Walk-in visit created successfully"

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error type
          example: "ValidationError"
        message:
          type: string
          description: Error message
          example: "Invalid patient data provided"
        details:
          type: object
          description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: When the error occurred

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication

tags:
  - name: Patients
    description: Patient management and intake
  - name: Notes
    description: Medical notes, transcripts, and SOAP notes
  - name: Workflow
    description: Workflow management for different visit types